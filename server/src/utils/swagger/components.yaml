components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
      bearerFormat: JWT
  parameters:
    q:
      name: q
      in: query
      description: "Search term"
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: "Sort by field"
      schema:
        type: string
        default: createdAt
    order:
      name: order
      in: query
      description: "Sort order"
      schema:
        type: string
        enum: [asc, desc]
        default: desc
    limit:
      name: limit
      in: query
      description: "Limit per page"
      schema:
        type: integer
        default: 10
    page:
      name: page
      in: query
      description: "Page number"
      schema:
        type: integer
        default: 1
  schemas:
    _id:
      type: object
      properties:
        _id:
          type: string
          format: uuid
    Error:
      type: object
      properties:
        error:
          type: string
    Error404:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    Error400:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    expected:
                      type: string
                    received:
                      type: string
                    path:
                      type: array
                      items:
                        type: string
                    message:
                      type: string
    Error500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    CustomError:
      properties:
        error:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              path:
                type: array
                items:
                  type: string
              message:
                type: string
  responses:
    unauthorized:
      description: "Unauthorized request"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
              error:
                type: string
