components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
      bearerFormat: JWT
  parameters:
    q:
      name: q
      in: query
      description: "Search term"
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: "Sort by field"
      schema:
        type: string
        default: createdAt
    order:
      name: order
      in: query
      description: "Sort order"
      schema:
        type: string
        enum: [asc, desc]
        default: desc
    limit:
      name: limit
      in: query
      description: "Limit per page"
      schema:
        type: integer
        default: 10
    page:
      name: page
      in: query
      description: "Page number"
      schema:
        type: integer
        default: 1
  schemas:
    _id:
      type: object
      properties:
        _id:
          type: string
    userId:
      type:
      properties:
        userId:
          type: string
    date:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
    responseSuccess:
      type: object
      properties:
        status:
          type: integer
          default: 200
        message:
          type: string
          default: OK
        data:
          type: object
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        description:
          type: string
        details:
          type: object
    Error404:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    Error400:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    expected:
                      type: string
                    received:
                      type: string
                    path:
                      type: array
                      items:
                        type: string
                    message:
                      type: string
    Error500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    CustomError:
      properties:
        error:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              path:
                type: array
                items:
                  type: string
              message:
                type: string
  responses:
    success:
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                description: HTTP status code
                default: 200
              message:
                type: string
                description: Success message
              accessToken:
                type: string
                description: New access token if old access token is expired
              data:
                type: object
                description: Response data
    badRequest:
      description: "Error: Bad Request"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  status:
                    example: 400
                  message:
                    example: "Bad Request"
              - $ref: "#/components/schemas/Error"
    unauthorized:
      description: "Error: Unauthorized"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  status:
                    example: 401
                  message:
                    example: "Unauthorized"
              - $ref: "#/components/schemas/Error"
    notFound:
      description: "Error: Not Found"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  status:
                    example: 404
                  message:
                    example: "Not Found"
              - $ref: "#/components/schemas/Error"

    internalServerError:
      description: "Error: Internal Server Error"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  status:
                    example: 500
                  message:
                    example: "Internal Server Error"
              - $ref: "#/components/schemas/Error"
